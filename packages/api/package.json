{
	"name": "@todo-graphql/api",
	"version": "1.0.0",
	"private": true,
	"license": "UNLICENSED",
	"scripts": {
		"<---BUILD--->": "-------------------------------------------------------------------------------------------------",
		"prebuild": "rimraf dist",
		"build": "nest build",
		"<---DEV--->": "---------------------------------------------------------------------------------------------------",
		"dev": "cross-env ENV_PATH=../../envs/.env nest start --watch",
		"debug": "cross-env ENV_PATH=../.env nest start --debug --watch",
		"<---PROD--->": "--------------------------------------------------------------------------------------------------",
		"prod": "node dist/main",
		"<---SCHEMA--->": "------------------------------------------------------------------------------------------------",
		"schema:create": "cross-env ENV_PATH=../../envs/.env npx mikro-orm schema:create --run",
		"schema:update": "cross-env ENV_PATH=../../envs/.env npx mikro-orm schema:update --run",
		"schema:drop": "cross-env ENV_PATH=../../envs/.env npx mikro-orm schema:drop --run",
		"<---MIGRATION--->": "---------------------------------------------------------------------------------------------",
		"migration:create": "cross-env ENV_PATH=../../envs/.env  npx mikro-orm migration:create --initial",
		"migration:up": "cross-env ENV_PATH=../../envs/.env  npx mikro-orm migration:up",
		"<---LINTER--->": "------------------------------------------------------------------------------------------------",
		"lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
		"<---FORMATTER--->": "---------------------------------------------------------------------------------------------",
		"format": "prettier --write \"src/**/*.ts\"",
		"<----TEST---->": "------------------------------------------------------------------------------------------------",
		"test": "jest",
		"test:watch": "jest --watch",
		"test:cov": "jest --coverage",
		"test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
		"test:e2e": "cross-env ENV_PATH=../../envs/.env jest --config ./test/jest-e2e.json --detectOpenHandles"
	},
	"dependencies": {
		"@todo-graphql/common": "1.0.0",
		"@mikro-orm/cli": "^4.5.6",
		"@mikro-orm/core": "^4.5.6",
		"@mikro-orm/migrations": "^4.5.6",
		"@mikro-orm/nestjs": "^4.2.0",
		"@mikro-orm/postgresql": "^4.5.6",
		"@nestjs-modules/mailer": "^1.6.0",
		"@nestjs/common": "^7.5.1",
		"@nestjs/config": "^0.6.3",
		"@nestjs/core": "^7.5.1",
		"@nestjs/graphql": "^7.11.0",
		"@nestjs/jwt": "^7.2.0",
		"@nestjs/passport": "^7.1.5",
		"@nestjs/platform-express": "^7.5.1",
		"apollo-server-express": "^2.25.1",
		"bcrypt": "^5.0.1",
		"cache-manager": "^3.4.4",
		"cache-manager-redis-store": "^2.0.0",
		"class-transformer": "^0.4.0",
		"class-validator": "^0.13.1",
		"dotenv": "^10.0.0",
		"graphql": "^15.5.1",
		"graphql-tools": "^7.0.5",
		"passport": "^0.4.1",
		"passport-jwt": "^4.0.0",
		"reflect-metadata": "^0.1.13",
		"rimraf": "^3.0.2",
		"rxjs": "^6.6.3"
	},
	"devDependencies": {
		"@nestjs/cli": "^7.5.1",
		"@nestjs/schematics": "^7.1.3",
		"@nestjs/testing": "^7.5.1",
		"@types/cache-manager": "^3.4.0",
		"@types/cache-manager-redis-store": "^2.0.0",
		"@types/express": "^4.17.8",
		"@types/jest": "^26.0.15",
		"@types/node": "^14.14.6",
		"@types/passport-jwt": "^3.0.5",
		"@types/supertest": "^2.0.10",
		"@typescript-eslint/eslint-plugin": "^4.6.1",
		"@typescript-eslint/parser": "^4.6.1",
		"cross-env": "^7.0.3",
		"eslint": "^7.12.1",
		"eslint-config-prettier": "7.1.0",
		"eslint-plugin-prettier": "^3.1.4",
		"jest": "^26.6.3",
		"prettier": "^2.1.2",
		"supertest": "^6.0.0",
		"ts-jest": "^26.4.3",
		"ts-loader": "^8.0.8",
		"ts-node": "^9.0.0",
		"tsconfig-paths": "^3.9.0",
		"typescript": "^4.0.5"
	},
	"jest": {
		"moduleFileExtensions": [
			"js",
			"json",
			"ts"
		],
		"rootDir": "src",
		"testRegex": ".*\\.spec\\.ts$",
		"transform": {
			"^.+\\.(t|j)s$": "ts-jest"
		},
		"collectCoverageFrom": [
			"**/*.(t|j)s"
		],
		"coverageDirectory": "../coverage",
		"testEnvironment": "node",
		"moduleNameMapper": {
			"^@modules(.*)$": "<rootDir>/src/modules$1",
			"^@common(.*)$": "<rootDir>/src/common$1"
		}
	}
}
